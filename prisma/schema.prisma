generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model properties {
  propertyID       Int               @id @default(autoincrement())
  propertyTag      String            @unique(map: "propertyTag_UNIQUE") @db.VarChar(100)
  propertyName     String            @db.VarChar(100)
  propertyServer   String            @db.VarChar(40)
  propertyPort     String?           @db.VarChar(10)
  mpehotel         Int?
  hotelName        String?           @db.VarChar(100)
  hotelTermsEN     String?           @db.VarChar(2048)
  hotelPhone       String?           @db.VarChar(20)
  hotelEmail       String?           @db.VarChar(255)
  hotelAddress     String?           @db.VarChar(255)
  hotelPostalCode  String?           @db.VarChar(255)
  hotelRNET        String?           @db.VarChar(50)
  hotelNIF         String?           @db.VarChar(50)
  passeIni         String?           @db.VarChar(255)
  pdfFilePath      String?           @db.VarChar(255)
  hotelTermsPT     String?           @db.VarChar(2048)
  hotelTermsES     String?           @db.VarChar(2048)
  propertyPortStay Int?
  hasStay          Boolean           @default(false)
  replyEmail       String?           @db.VarChar(255)
  replyPassword    String?           @db.VarChar(255)
  sendingServer    String?           @db.VarChar(100)
  sendingPort      Int?
  infoEmail        String?           @db.VarChar(255)
  emailBody        String?           @default("") @db.VarChar(4000)
  emailSubject     String?           @default("") @db.VarChar(255)
  privacyPolicyEN  String?           @default("") @db.VarChar(1000)
  privacyPolicyPT  String?           @default("") @db.VarChar(1000)
  hasRoomCloud     Boolean           @default(false)
  usersProperties  usersProperties[]
}

model requestRecords {
  requestID       Int      @id @default(autoincrement())
  requestBody     String   @db.Text
  requestType     String   @db.VarChar(8192)
  requestDateTime DateTime @db.DateTime(0)
  responseStatus  String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
  seen            Boolean?
  uniqueKey       String?  @db.VarChar(255)
  seenAt          DateTime @default(dbgenerated("(_utf8mb4\\'1900-01-01 00:00:00\\')")) @db.DateTime(0)
}

model users {
  userID           Int               @id @default(autoincrement())
  firstName        String            @db.VarChar(50)
  secondName       String            @db.VarChar(50)
  email            String            @unique(map: "email") @db.VarChar(100)
  password         String            @db.VarChar(255)
  createdAt        DateTime?         @default(now()) @db.Timestamp(0)
  propertyID       Int?
  pin              String?           @db.VarChar(255)
  permissions      Int               @default(0)
  expirationDate   DateTime?         @default(dbgenerated("'2222-01-01'")) @db.Date
  internalUser     String?           @db.VarChar(100)
  internalPassword String?           @db.VarChar(255)
  usersProperties  usersProperties[]
}

model usersProperties {
  userID      Int
  propertyID  Int
  propertyTag String     @db.VarChar(10)
  properties  properties @relation(fields: [propertyID], references: [propertyID], onDelete: Cascade)
  users       users      @relation(fields: [userID], references: [userID], onDelete: Cascade)

  @@id([userID, propertyID, propertyTag])
  @@index([propertyID], map: "usersProperties_propertyID_fkey")
}

model counter {
  id          Int    @id @default(autoincrement())
  counterName String @db.VarChar(255)
  count       Int?   @default(0)
  propertyID  Int
}

model requestRecordsArrivals {
  requestID       Int      @id @default(autoincrement())
  requestBody     Json
  requestType     String   @db.VarChar(20)
  requestDateTime DateTime @db.DateTime(0)
  responseStatus  String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
}

model requestRecordsDepartures {
  requestID       Int      @id @default(autoincrement())
  requestBody     Json
  requestType     String   @db.VarChar(8192)
  requestDateTime DateTime @db.DateTime(0)
  responseStatus  String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
}

model requestRecordsInHouses {
  requestID       Int      @id @default(autoincrement())
  requestBody     Json
  requestType     String   @db.VarChar(8192)
  requestDateTime DateTime @db.DateTime(0)
  responseStatus  String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
}

model stayRecords {
  stayID          Int      @id @default(autoincrement())
  requestBody     String   @db.Text
  requestType     String   @db.VarChar(8192)
  requestDateTime DateTime @db.DateTime(0)
  requestStatus   String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
  token           String?  @db.VarChar(512)
  companionsIDS   String?  @db.VarChar(255)
}

model hotelTerms {
  propertyID      Int     @id
  termsAndCondPT  String? @db.VarChar(2000)
  termsAndCondEN  String? @db.VarChar(2000)
  termsAndCondES  String? @db.VarChar(2000)
  privacyPolicyPT String? @db.VarChar(2000)
  privacyPolicyEN String? @db.VarChar(2000)
  privacyPolicyES String? @db.VarChar(2000)
  miniTermsPT     String? @db.VarChar(1200)
  miniTermsEN     String? @db.VarChar(1200)
  miniTermsES     String? @db.VarChar(1200)
}

model stayTemplates {
  templateID   Int     @id @default(autoincrement())
  emailSubject String? @default("") @db.VarChar(500)
  emailBody    String? @default("") @db.VarChar(8000)
}

model registrationRecords {
  requestID       Int       @id @default(autoincrement())
  requestBody     String?   @db.Text
  requestType     String?   @db.VarChar(10)
  requestDateTime DateTime? @db.DateTime(0)
  responseStatus  String?   @db.VarChar(20)
  responseBody    String?   @db.Text
  propertyID      Int?
  seen            Boolean?
  uniqueKey       String?   @db.VarChar(255)
  seenAt          DateTime? @db.DateTime(0)
}

model roomCloud {
  id         Int     @id @default(autoincrement())
  username   String? @default("") @db.VarChar(200)
  password   String? @default("") @db.VarChar(255)
  hotelID    String? @default("") @db.VarChar(50)
  propertyID Int?    @unique(map: "propertyID") @default(-1)
}

model roomCloudPropUsers {
  id         Int @id @default(autoincrement())
  userID     Int @default(-1)
  propertyID Int @default(-1)
}

model stayPropUsers {
  id         Int @id @default(autoincrement())
  userID     Int @default(-1)
  propertyID Int @default(-1)
}

model requestRecordsReservationsOta {
  requestID       Int      @id @default(autoincrement())
  requestBody     Json
  requestType     String   @db.VarChar(8192)
  requestDateTime DateTime @db.DateTime(0)
  responseStatus  String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
}

model requestRecordsHousekeeping {
  requestID       Int      @id @default(autoincrement())
  requestBody     Json
  requestType     String   @db.VarChar(8192)
  requestDateTime DateTime @db.DateTime(0)
  responseStatus  String?  @db.VarChar(20)
  responseBody    String?  @db.Text
  propertyID      Int
}

model roomCloudLogs {
  requestID      Int       @id @default(autoincrement())
  hotelID        Int
  requestBody    String?   @db.Text
  responseStatus String?   @db.VarChar(50)
  responseBody   String?   @db.Text
  createdAt      DateTime? @default(now()) @db.Timestamp(0)
}
